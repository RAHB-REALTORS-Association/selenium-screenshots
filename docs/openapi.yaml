---
openapi: 3.0.0
info:
  title: Screenshot API
  version: 1.0.0
  description: |-
    This project provides a simple API service that uses Selenium and Google Chrome to take screenshots of websites. It's powered by Flask and can be containerized using Docker for ease of deployment.

    For more information and source code, please visit the GitHub repository: [Selenium Screenshots](https://github.com/RAHB-REALTORS-Association/selenium-screenshots).
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    name: RAHB Lab
    url: https://lab.rahb.ca/
servers:
- url: https://screenshot-api.oncornerstone.app
  description: Production server
- url: http://screenshot-api.app.rahb.local
  description: Staging server
- url: http://127.0.0.1:5000
  description: Development server
paths:
  "/screenshot":
    get:
      summary: Take a screenshot of a website.
      description: Make a GET request to `/screenshot` endpoint with the required
        `url` parameter and optional `viewport`, `format`, and `delay` parameters
        to capture a screenshot. Requires API authentication using a bearer token.
      parameters:
      - name: url
        in: query
        required: true
        description: The URL of the website to screenshot.
        schema:
          type: string
      - name: viewport
        in: query
        description: The viewport size. Default is '1440x900'. Useful for capturing
          screenshots of specific sizes.
        schema:
          type: string
      - name: format
        in: query
        description: The screenshot format. Supports PNG, JPG. Default is 'PNG'. Choose
          between the two image formats for different use cases.
        schema:
          type: string
      - name: delay
        in: query
        description: The delay before the screenshot is taken to allow the page to
          load. Default is '0'. Useful for ensuring that dynamic content has loaded.
        schema:
          type: integer
      responses:
        '200':
          description: Screenshot successfully taken. Returns the captured image in
            either PNG or JPG format.
          content:
            image/png: {}
            image/jpeg: {}
        '401':
          description: Unauthorized. The API authentication token is missing or invalid.
        '500':
          description: Internal Server Error. An error occurred while taking the screenshot.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: 'Enter your API authentication token in this format: Bearer <your_api_authentication_token>'
security:
- bearerAuth: []
